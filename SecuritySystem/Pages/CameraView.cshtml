@page
@using buildingSystem
@model CameraViewControler
@{
    ViewData["Title"] = "Camera View Page";
    // This is how Im doing the image mapping
    // https://imagemap.org/
    // image source 
    // https://www.edrawsoft.com/templates/pdf/mall-floor-plan.pdf

    // Onclick handler 
    //    https://www.youtube.com/watch?v=QeRszt0OKUw
    // Model controlers
    
    // when buildingControl changes Call a seperate function


}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
    .SenarioContainer {
        border-radius: 10px;
        border: 4px solid green;
    }
    .SenarioContainer :hover{
        background-color: lightblue;
    }
    .senarioBlock {
        border: 1px solid green;
        border-radius: 10px;
    }
</style>
<script>
    function displaySenarios() {
        // This just shows or hids the senarios page
        var senarioBlock = document.getElementById("testSenarios");
        if(senarioBlock.style.display == "none") {
            senarioBlock.style.display = "block";
        }else {
            senarioBlock.style.display = "none";
        }
    }

    function muteOrUnmute() {
        //This toggles the <p> soundOn to soundOff or visa versa, which will allow adible alarm to play
        var sound = document.getElementById("soundStatus");
        if(sound.innerHTML == "SoundOn") {
            sound.innerHTML = "SoundOff";
        }
        else {sound.innerHTML = "SoundOn";}
    }
    function playAlarm() {
        // play sound if system is not muted
        if(document.getElementById("soundStatus").innerHTML == "SoundOn") {
            var alarm = new Audio();
            alarm.src = document.querySelector('source').src;
            alarm.play();
        }
    }


</script>
<div class="text-center">
    <h1 class="display-4">CameraView</h1>
    <p>This is a test to check if control center varables stay alive, being user password::</p>
    <p id="test1"></p>
        <div>
            <div class="SenarioContainer" onclick="displaySenarios()">
                <h1>Click to Display Senarios(Only On test version)</h1>
            </div>
            
            <div style="display: none;" id="testSenarios">
                <div class="senarioBlock">
                    <h3>Sensor Related tests</h3>
                    <div>
                        <input type="number" id="ActivateSensor" min="1" max="41"></input>
                        <button onclick="ActivateSensorAjax()">Activate Sensor in Room #</button>
                    </div>

                    <div>
                        <input type="number" id="DeactivateSensor" min="1" max="41"></input>
                        <button onclick="DeactivateSensorAjax()">Deactivate Sensor in Room #</button>
                    </div>
                    <div>
                    
                        <button onclick="ActivateRandomSensors">Activate Random Sensors</button>
                    </div>
                    <div>
                        <button onclick="DeactivateAllSensors()">Deactivate All Sensors</button>
                    </div>
                </div>
                <div class="senarioBlock">
                    <h3>Person Related tests</h3>
                         <input type="number" id="AddPersonToRoom" min="1" max="41"></input>
                        <button onclick="alert('NotImplemented')">Add person into room #</button>
                 </div>

                  <div class="senarioBlock">
                    <h3>Sound related</h3>
                        <p>Note that muting would not be avalible in actual system</p>
                         <p id="soundStatus">SoundOn</p>
                        <button onclick="muteOrUnmute()">Mute and unmute</button>
                        <button onclick="playAlarm()">Test the audible sound</button>
                 </div>

            </div>
        </div>

</div>
@*Hidden audio container*@
<source src="~/img/Alarm.mp3?v=2" type="audio/mpeg">

<div style="text-align: center;">
    <div id="containerForRoom" class="containerForRoom" style="display:inline-block">
        <img src='~/img/mall-floor-plan.jpg?v=2'  usemap="#image_map" style="display: inline-block;">
    </div>
    
    <map name="image_map">
    @*Sensor really referes to the room number. So sensor-3 means room 3. Note that not all rooms have sensors*@
    <area id="sensor-1"   coords="257,73,15" shape="circle">
    <area id="sensor-3"   coords="534,255,13" shape="circle">
    <area id="sensor-4"   coords="728,242,13" shape="circle">
    <area id="sensor-5"   coords="935,236,14" shape="circle">
    <area id="sensor-6"   coords="126,202,18" shape="circle">
    <area id="sensor-7"   coords="135,333,18" shape="circle">
    <area id="sensor-8"   coords="127,511,12" shape="circle">
    <area id="sensor-9"   coords="438,583,17" shape="circle">
    <area id="sensor-10"  coords="732,572,15" shape="circle">
    <area id="sensor-11"  coords="850,519,14" shape="circle">
    <area id="sensor-12"  coords="1063,539,11" shape="circle">
    <area id="sensor-13"  coords="139,709,15" shape="circle">
    <area id="sensor-14"  coords="431,760,18" shape="circle">
    <area id="sensor-15"  coords="678,635,16" shape="circle">
    <area id="sensor-16"  coords="846,690,15" shape="circle">
    <area id="sensor-17"  coords="1056,662,15" shape="circle">
    <area id="sensor-18"  coords="135,881,15" shape="circle">
    <area id="sensor-19"  coords="344,986,17" shape="circle">
    <area id="sensor-20"  coords="446,986,13" shape="circle">
    <area id="sensor-21"  coords="675,953,17" shape="circle">
    <area id="sensor-22"  coords="811,969,14" shape="circle">
    <area id="sensor-23"  coords="1061,814,15" shape="circle">
    <area id="sensor-24"  coords="1064,942,15" shape="circle">
    <area id="sensor-25"  coords="141,1060,17" shape="circle">
    <area id="sensor-26"  coords="351,1091,15" shape="circle">
    <area id="sensor-27"  coords="455,1094,17" shape="circle">
    <area id="sensor-28"  coords="653,1142,17" shape="circle">
    <area id="sensor-29"  coords="769,1145,16" shape="circle">
    <area id="sensor-30"  coords="866,1143,15" shape="circle">
    <area id="sensor-31"  coords="1063,1079,17" shape="circle">
    <area id="sensor-32"  coords="142,1224,15" shape="circle">
    <area id="sensor-33"  coords="345,1187,15" shape="circle">
    <area id="sensor-34"  coords="452,1191,16" shape="circle">
    <area id="sensor-35"  coords="345,1277,13" shape="circle">
    <area id="sensor-36"  coords="454,1280,15" shape="circle">
    <area id="sensor-37"  coords="1055,1216,15" shape="circle">
    <area id="sensor-39"  coords="1063,1355,15" shape="circle">
    <area id="sensor-40"  coords="255,1517,18" shape="circle">
    <area id="sensor-41"  coords="472,1487,19" shape="circle">




        <area id="alarm-1" onclick="activateAlarm(1)" coords="201,50,236,92" shape="rect">
        <area  id="alarm-3" onclick="activateAlarm(3)" coords="442,146,472,187" shape="rect">
        <area id="alarm-4" onclick="activateAlarm(4)"  coords="593,220,623,258" shape="rect">
        <area id="alarm-5" onclick="activateAlarm(5)"  coords="793,219,825,254" shape="rect">
        <area id="alarm-6" onclick="activateAlarm(6)"  coords="38,184,64,224" shape="rect">
        <area id="alarm-7" onclick="activateAlarm(7)"  coords="51,320,82,360" shape="rect">
        <area id="alarm-8" onclick="activateAlarm(8)"  coords="45,497,73,537" shape="rect">
        <area id="alarm-9" onclick="activateAlarm(9)"  coords="274,478,302,518" shape="rect">
        <area id="alarm-10" onclick="activateAlarm(10)"  coords="599,498,625,537" shape="rect">
        <area id="alarm-11" onclick="activateAlarm(11)"  coords="792,500,820,538" shape="rect">
        <area id="alarm-12" onclick="activateAlarm(12)"  coords="992,513,1021,551" shape="rect">
        <area id="alarm-13" onclick="activateAlarm(13)"  coords="58,686,85,726" shape="rect">
        <area id="alarm-14" onclick="activateAlarm(14)"  coords="271,740,301,782" shape="rect">
        <area id="alarm-15"  onclick="activateAlarm(15)" coords="603,618,630,657" shape="rect">
        <area id="alarm-16" onclick="activateAlarm(16)"  coords="801,638,824,673" shape="rect">
        <area id="alarm-17" onclick="activateAlarm(17)"  coords="995,646,1024,685" shape="rect">
        <area id="alarm-23" onclick="activateAlarm(23)"  coords="988,786,1017,825" shape="rect">
        <area id="alarm-18" onclick="activateAlarm(18)"  coords="51,859,81,902" shape="rect">
        <area id="alarm-19" onclick="activateAlarm(19)"  coords="278,971,302,1010" shape="rect">
        <area id="alarm-20"  onclick="activateAlarm(20)" coords="385,971,411,1008" shape="rect">
        <area id="alarm-21"  onclick="activateAlarm(21)" coords="619,939,647,974" shape="rect">
        <area id="alarm-22" onclick="activateAlarm(22)"  coords="794,906,821,947" shape="rect">
        <area id="alarm-24"  onclick="activateAlarm(24)" coords="991,932,1021,973" shape="rect">
        <area id="alarm-31" onclick="activateAlarm(31)" coords="1001,1062,1029,1099" shape="rect">
        <area id="alarm-30"  onclick="activateAlarm(30)" coords="805,1130,831,1167" shape="rect">
        <area id="alarm-37"  onclick="activateAlarm(37)" coords="995,1197,1021,1236" shape="rect">
        <area id="alarm-39"  onclick="activateAlarm(39)" coords="991,1340,1021,1374" shape="rect">
        <area id="alarm-29" onclick="activateAlarm(29)"  coords="705,1127,738,1169" shape="rect">
        <area id="alarm-28"  onclick="activateAlarm(28)" coords="589,1122,623,1163" shape="rect">
        <area id="alarm-25" onclick="activateAlarm(25)"  coords="48,1044,81,1084" shape="rect">
        <area id="alarm-26" onclick="activateAlarm(26)"  coords="283,1073,311,1109" shape="rect">
        <area id="alarm-27" onclick="activateAlarm(27)"  coords="377,1080,407,1116" shape="rect">
        <area id="alarm-32" onclick="activateAlarm(32)"  coords="53,1213,82,1254" shape="rect">
        <area id="alarm-33" onclick="activateAlarm(33)"  coords="277,1169,305,1207" shape="rect">
        <area id="alarm-34"  onclick="activateAlarm(34)" coords="379,1171,408,1213" shape="rect">
        <area id="alarm-35" onclick="activateAlarm(35)"  coords="280,1260,302,1296" shape="rect">
        <area id="alarm-36" onclick="activateAlarm(36)"  coords="385,1261,404,1300" shape="rect">
        <area id="alarm-40" onclick="activateAlarm(40)"  coords="186,1503,213,1540" shape="rect">
        <area id="alarm-41" onclick="activateAlarm(41)"  coords="399,1466,426,1500" shape="rect">


          <area id="sprinkler-" coords="227,102,272,143" shape="rect">
  <area id="sprinkler-" coords="441,237,483,279" shape="rect">
  <area id="sprinkler-" coords="580,271,625,310" shape="rect">
  <area id="sprinkler-" coords="796,271,834,311" shape="rect">
  <area id="sprinkler-" coords="34,250,79,290" shape="rect">
  <area id="sprinkler-" coords="34,404,82,444" shape="rect">
  <area id="sprinkler-" coords="29,609,76,653" shape="rect">
  <area id="sprinkler-" coords="272,540,315,585" shape="rect">
  <area id="sprinkler-" coords="592,560,638,603" shape="rect">
  <area id="sprinkler-" coords="841,558,880,601" shape="rect">
  <area id="sprinkler-" coords="1033,586,1077,628" shape="rect">
  <area id="sprinkler-" coords="39,783,81,824" shape="rect">
  <area id="sprinkler-" coords="256,833,301,876" shape="rect">
  <area id="sprinkler-" coords="611,770,655,810" shape="rect">
  <area id="sprinkler-" coords="806,748,854,790" shape="rect">
  <area id="sprinkler-" coords="1029,715,1077,758" shape="rect">
  <area id="sprinkler-" coords="1035,868,1078,910" shape="rect">
  <area id="sprinkler-" coords="1033,1006,1081,1048" shape="rect">
  <area id="sprinkler-" coords="799,1071,847,1112" shape="rect">
  <area id="sprinkler-" coords="613,1001,660,1040" shape="rect">
  <area id="sprinkler-" coords="436,1022,479,1058" shape="rect">
  <area id="sprinkler-" coords="41,970,81,1011" shape="rect">
  <area id="sprinkler-" coords="323,1023,367,1059" shape="rect">
  <area id="sprinkler-" coords="33,1131,79,1169" shape="rect">
  <area id="sprinkler-" coords="324,1125,365,1160" shape="rect">
  <area id="sprinkler-" coords="436,1122,480,1158" shape="rect">
  <area id="sprinkler-" coords="44,1293,87,1334" shape="rect">
  <area id="sprinkler-" coords="323,1217,365,1250" shape="rect">
  <area id="sprinkler-" coords="432,1219,474,1252" shape="rect">
  <area id="sprinkler-" coords="430,1307,471,1337" shape="rect">
  <area id="sprinkler-" coords="327,1302,365,1335" shape="rect">
  <area id="sprinkler-" coords="633,1181,679,1214" shape="rect">
  <area id="sprinkler-" coords="744,1184,788,1221" shape="rect">
  <area id="sprinkler-" coords="845,1183,879,1220" shape="rect">
  <area id="sprinkler-" coords="1031,1132,1078,1177" shape="rect">
  <area id="sprinkler-" coords="1032,1272,1076,1315" shape="rect">
  <area id="sprinkler-" coords="1038,1412,1075,1452" shape="rect">
  <area id="sprinkler-" coords="129,1490,175,1529" shape="rect">
  <area id="sprinkler-" coords="395,1520,436,1565" shape="rect">

        <area id="direction-" coords="159,111,211,136" shape="rect">
        <area id="direction-" coords="502,148,558,172" shape="rect">
        <area id="direction-" coords="701,271,754,295" shape="rect">
        <area id="direction-" coords="910,274,961,294" shape="rect">
        <area id="direction-" coords="106,268,158,288" shape="rect">
        <area id="direction-" coords="109,424,161,444" shape="rect">
        <area id="direction-" coords="407,491,459,510" shape="rect">
        <area id="direction-" coords="720,517,769,538" shape="rect">
        <area id="direction-" coords="790,578,841,597" shape="rect">
        <area id="direction-" coords="971,605,1022,621" shape="rect">
        <area id="direction-" coords="109,620,156,641" shape="rect">
        <area id="direction-" coords="719,634,768,655" shape="rect">
        <area id="direction-" coords="109,795,162,813" shape="rect">
        <area id="direction-" coords="393,836,443,855" shape="rect">
        <area id="direction-" coords="708,942,756,963" shape="rect">
        <area id="direction-" coords="793,1025,847,1044" shape="rect">
        <area id="direction-" coords="805,809,857,824" shape="rect">
        <area id="direction-" coords="967,737,1018,753" shape="rect">
        <area id="direction-" coords="970,876,1024,900" shape="rect">
        <area id="direction-" coords="969,1016,1024,1036" shape="rect">
        <area id="direction-" coords="972,1152,1026,1167" shape="rect">
        <area id="direction-" coords="969,1285,1022,1305" shape="rect">
        <area id="direction-" coords="801,1207,845,1230" shape="rect">
        <area id="direction-" coords="687,1198,736,1216" shape="rect">
        <area id="direction-" coords="571,1194,619,1214" shape="rect">
        <area id="direction-" coords="111,989,159,1012" shape="rect">
        <area id="direction-" coords="262,1041,313,1059" shape="rect">
        <area id="direction-" coords="379,1038,429,1059" shape="rect">
        <area id="direction-" coords="268,1136,318,1158" shape="rect">
        <area id="direction-" coords="381,1136,431,1157" shape="rect">
        <area id="direction-" coords="261,1232,311,1254" shape="rect">
        <area id="direction-" coords="375,1226,427,1247" shape="rect">
        <area id="direction-" coords="276,1313,327,1335" shape="rect">
        <area id="direction-" coords="376,1321,426,1340" shape="rect">
        <area id="direction-" coords="103,1154,154,1173" shape="rect">
        <area id="direction-" coords="106,1312,162,1332" shape="rect">
        <area id="direction-" coords="222,1567,269,1588" shape="rect">
        <area id="direction-" coords="446,1535,497,1556" shape="rect">
        <area id="direction-" coords="967,1437,1014,1454" shape="rect">


  <area id="door---" coords="213,164,272,182" shape="rect">
  <area id="door---" coords="179,217,198,268" shape="rect">
  <area id="door---" coords="331,249,386,266" shape="rect">
  <area id="door---" coords="456,315,509,328" shape="rect">
  <area id="door---" coords="648,314,702,329" shape="rect">
  <area id="door---" coords="850,313,906,333" shape="rect">
  <area id="door---" coords="183,356,196,412" shape="rect">
  <area id="door---" coords="180,553,196,605" shape="rect">
  <area id="door---" coords="325,639,386,657" shape="rect">
  <area id="door---" coords="651,482,708,500" shape="rect">
  <area id="door---" coords="889,518,899,573" shape="rect">
  <area id="door---" coords="953,544,964,591" shape="rect">
  <area id="door---" coords="495,534,507,589" shape="rect">
  <area id="door---" coords="186,730,194,784" shape="rect">
  <area id="door---" coords="494,788,504,840" shape="rect">
  <area id="door---" coords="575,690,584,745" shape="rect">
  <area id="door---" coords="661,832,716,842" shape="rect">
  <area id="door---"coords="889,755,897,810" shape="rect">
  <area id="door---" coords="885,643,898,696" shape="rect">
  <area id="door---" coords="954,669,961,725" shape="rect">
  <area id="door---" coords="955,815,962,867" shape="rect">
  <area id="door---" coords="887,920,895,972" shape="rect">
  <area id="door---" coords="953,952,962,1007" shape="rect">
  <area id="door---" coords="660,887,713,897" shape="rect">
  <area id="door---" coords="573,983,578,1037" shape="rect">
  <area id="door---" coords="187,913,196,967" shape="rect">
  <area id="door---" coords="185,1100,196,1150" shape="rect">
  <area id="door---" coords="184,1248,197,1305" shape="rect">
  <area id="door---" coords="184,1395,197,1452" shape="rect">
  <area id="door---" coords="305,1512,315,1563" shape="rect">
  <area id="door---" coords="322,1606,373,1615" shape="rect">
  <area id="door---" coords="438,1432,492,1442" shape="rect">
  <area id="door---" coords="746,1603,799,1617" shape="rect">
  <area id="door---" coords="953,1360,963,1411" shape="rect">
  <area id="door---" coords="951,1231,963,1281" shape="rect">
  <area id="door---" coords="952,1098,963,1148" shape="rect">
  <area id="door---" coords="886,1032,895,1091" shape="rect">
  <area id="door---" coords="331,901,389,911" shape="rect">
  <area id="door---" coords="494,1272,502,1325" shape="rect">
  <area id="door---" coords="244,1270,255,1324" shape="rect">
  <area id="door---" coords="243,1183,255,1236" shape="rect">
  <area id="door---" coords="494,1183,503,1235" shape="rect">
  <area id="door---" coords="494,1092,505,1147" shape="rect">
  <area id="door---" coords="494,984,504,1038" shape="rect">
  <area id="door---" coords="244,986,255,1035" shape="rect">
    </map>
</div>

    <style>
        .Ledgend{
            margin: 200px;
            border-radius: 10px;
            border: 4px solid green;
            text-align: center;
        }

    </style>

    <div class="Ledgend">
        <h1>Page Ledgend</h1>
        <h3>This is to help understand the room states</h3>
        <h3>Not this is usually handeled automatically</h3>

        <div>
        <button onclick="alert('todo')">Remove Sensor</button>
        <button onclick="alert('todo')">Add Sensor</button>
        </div>

        <div>
        <button onclick="alert('todo')">Activate Sensor</button>
        <button onclick="alert('todo')">Deactivate Sensor</button>
        </div>

        <div>
        <button onclick="alert('todo')">Activate Alarm</button>
        <button onclick="alert('todo')">Deactivate Alarm</button>
        </div>

        <div>
        <button onclick="alert('todo')">Activate Sprinkler</button>
        <button onclick="alert('todo')">Deactivate Sprinkler</button>
        </div>

        <div>
            <button onclick="alert('todo')">Activate Direction Indicator</button>
            <button onclick="alert('todo')">Deactivate Direction Indicator</button>
        </div>

        <div>
            <button onclick="alert('todo')">Open Doors</button>
            <button onclick="alert('todo')">Close Doors</button>
        </div>

        <img src="~/img/ledgendPhoto.jpg?v=2" usemap="#image_map">
        <map name="image_map">
            <area  coords="194,119,31" shape="circle">
            <area  coords="140,211,243,252" shape="rect">
            <area  coords="45,68,110,145" shape="rect">
            <area  coords="37,188,125,266" shape="rect">
            <area  coords="116,-1,228,16" shape="rect">
        </map>
    </div>
<script>

    ///////////////////////////////
    /*
    Ajax Functions
    
    */
    ///////////////////////////////
    function ExampleFunctionForAJAX() {
        // The purpouse of this function is show how to use AJAX to call the Controller for this page
        var URL = '/CameraViewControler/OnGetSpecificRoomState';
        $.ajax({
            url: URL,
            dataType: 'json',
            success: function (data) {
                console.log(data);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log('Error:', textStatus, errorThrown);
            }
        });
    }

    var cnt2 = 0;
    function ActivateRandomSensors() {
        // Need to perform a callback loop so it will activate them randomly but sequentially random
        if(cnt2 == 0) {
        for(var i=1; i<41; i++) {
           DeactivateSensorAjax(false,i);
        }
            //await DeactivateAllSensors(true)
        }
        
        if(cnt2 == 40) {
            cnt2 = 0;
            alarmReportedProcedureAJAX();
            return;
        }
        // Loop through all rooms with a 1/3 chance of it becomming active
        if(Math.floor(Math.random() * 3) == 2) {
            // perform another callback
            var test = ActivateSensorAjax(false,cnt2+1,function(){
                    cnt2++;
                    ActivateRandomSensors();
            });
            
        } else {
                // perform callback
                cnt2++;
                ActivateRandomSensors();
        }

    }

    function ActivateSensorAjax(specific=true,room=0,returnFunction=false, fromPageLoad=false) {
        // called to activate a specific sensor based on the room it is in
        if(specific == true) {
        var room = document.getElementById("ActivateSensor").value;
        }
        else {
           var room = room
        }
        
        $.ajax({
            url: '/CameraViewControler/OnActivateSensorAjax',
            // Room array index starts at 0 so we subract 1
            data: { roomNumber: room - 1 },
            dataType: 'json',
            async: true,
            success: function (data) {
           
                activateSesor(room)
                if(returnFunction != false) {
                    returnFunction();
                    // alarm reported feature will get called in calling function
                } else if (fromPageLoad) {
                    // Do nothing
                }
                else {
                    // function will only be called once so we should enter alarm reported procedure.
                    alarmReportedProcedureAJAX();
                }
            },
            error: function (errorThrown) {
                console.log("An Error occured in the ajax request for ActivateSensorAjax:", errorThrown);
            }
        });
    }

     function DeactivateSensorAjax(specific=true,room=0) {
        // called to Deactivate a specific sensor based on the room it is in
        if(specific == true) {
            var room = document.getElementById("DeactivateSensor").value;
        } else {
            var room = room
        }
        
        $.ajax({
            url: '/CameraViewControler/OnDeactivateSensorAjax',
            data: { roomNumber: room },
            dataType: 'json',
            success: function (data) {
                deactivateSensor(room);
            },
            error: function (errorThrown) {
                console.log("An Error occured in the ajax request for DeactivateSensorAjax:", errorThrown);
            }
        });
    }
    function DeactivateAllSensors() {

 
        for(var i=1; i<41; i++) {
           DeactivateSensorAjax(false,i);
        }
        if(calledFromAnotherFunction == false) {
            //This is because alarmReportedProcedure should only activate once
            alarmReportedProcedureAJAX();
        }
    }
    // this will determin if the function setBackActiveSensorsOnRefreshAJAX should continue running 
    var cnt = 0;

        function setBackActiveSensorsOnRefreshAJAX() {
        // After the page has been reloaded we need to check if the sensors were previously loaded
   
            if(cnt == 41) {
                cnt = 0;
                alarmReportedProcedureAJAX();
                return;
            }
             $.ajax({
                url: '/CameraViewControler/OnGetSpecificSensorStatus',
                data: { roomNumber: cnt },
                dataType: 'json',
                aync: true,
                success: function (data) {
                    if(data == true) {
                        activateSesor(cnt + 1)
                        // performing a call back like this will make this run more sequentially.
                    }
                cnt++;
                setBackActiveSensorsOnRefreshAJAX();
                },
                error: function (errorThrown) {
                    console.log("An Error occured in the ajax request for setBackActiveSensorsOnRefreshAJAX:", errorThrown);
                }
            });
 
    }
    document.addEventListener("DOMContentLoaded", setBackActiveSensorsOnRefreshAJAX);

    function alarmReportedProcedureAJAX(){
        // On UI first
        // Should be called after sensors have been activated

        /*
        I could send a fetch to the backend, sends nothing, returns 2d array with things that need to be activated 
        {
         "confirmed": true,
         "sprinklers": [6,20,22],
         "alarm": [6,20,22],
         "direction": [6,20,22],
         "doors": [6,22],
         "peopleCalled":["FireDepartment","OnCall"]
        }

        By the time the json is returned all logic should be handled

        // First version will be for unmanned control center
        // Confirm alarm
        // if confirmed by multiple confirmed sensors
        // Call emergency department - call oncall person - display symbol
        // play audible alarm that can be muted activate direction indicators
        // if person is not in the room lock doors and display them as locked
        // activate sprinkler

        */
  
         $.ajax({
            url: '/CameraViewControler/OnAlarmReportedProcedureAJAX',
     
            dataType: 'json',
            async: true,
            success: function (data) {
                console.log(data);
                if(data[0][0] == true) {
                    // Alarm was confirmed play alarm
                    // UNCOMMENT during presentation
                    //playAlarm()
                }
                if(data[1].length > 0) {
                    // activate sprinklers
                    for(i=1;i<=41;i++) {
                        if(data[1][0].indexOf(i) !==  -1) {
                            // Sprinkler needs to be activated
                            console.log(i)
                            activateAlarm(i);
                        } else {
                            // make sure sprinkler is off
                            deactivateAlarms(i)
                        }
                        
                    }
                   
                }
                if(data[2].length > 0) {
                    // activate alarms
                }
                if(data[3].length > 0) {
                    // activate directions
                }
                if(data[4].length > 0) {
                    // activate doors
                }
                if(data[5].length > 0) {
                    // show people to call
                }
            },
            error: function (errorThrown) {
                console.log("An Error occured in the ajax request for alarmReportedProcedureAJAX:", errorThrown);
            }
        });
    }



    function  activateOrDeactivateAlarmAJAX(area){
    
    }
    function  activateOrDeactivateSprinklerAJAX(area){
    
    }
    function  activateOrDeactivateDirectionIndicatorAJAX(area){
    
    }
    function addOrRemoveSensorAJAX(){
        //
    }
    function addOrRemoveAlarmAJAX() {
        //
    }
    function addOrRemoveSprinklerAJAX() {
        //
    }
    function addOrRemoveDirectionIndicatorAJAX() {
        //
    }
    function AttemptGetPasswordAJAX() {
        // This is the function that should happen on page submit
        $.ajax({
            url: '/CameraViewControler/OnAttemptGetPassword',
            dataType: 'json',

            success: function (data) {
                // if data is true return change page to index else remain on current page
                document.getElementById("test1").innerHTML = data;
                if (data == true) {
                } else {

                }
            },
            error: function (errorThrown) {
                console.log("An Error occured in the ajax request for activateOrDeactivateSensorsAJAX:", errorThrown);
            }
        });
    }
   document.addEventListener("DOMContentLoaded",AttemptGetPasswordAJAX);


    ///////////////////////////////
    /*
    Drawing Functions
    
    */
    ///////////////////////////////

    function activateSesor(room){
        //This is used to deactivate a single sensor
        var checkMarker = document.getElementById("sensor-Marker" + room);
        // there needs to be no marker made for that sensor
        if(checkMarker === null) {
                var sensor = document.getElementById("sensor-"+room);
                if(sensor !== null) {
                    //Get the sensor location
                    var sensorLocation = sensor.coords.split(",")
                    var x = sensorLocation[0];
                    var y = sensorLocation[1];
                    var radius = sensorLocation[2];
            
                    // create marker for the flashing icon
                    var marker = document.createElement("div");
                     marker.id = "sensor-Marker" + room;
                    marker.className = "sensor active";
                    // Set the top location of the marker
                    marker.style.top = (y-radius) + "px";
                    // Set the left position of the marker
                    marker.style.left = (x - radius) + "px";
                    // Set the marker width and height
                    marker.style.height = (radius * 2) + "px";
                    marker.style.width = marker.style.height;
            
                    // set up class properties
                    sensor.marker = sensor.marker || marker
                    if(!sensor.marker.parentNode) {
                        // push the sensor to the room container
                        document.getElementById("containerForRoom").appendChild(sensor.marker);
                    } 
                }
        }
    }

        function activateAlarm(room){
        //This is used to deactivate a single alarm
        var checkMarker = document.getElementById("alarm-Marker" + room);
        console.log(room)
        // there needs to be no marker made for that alarm
        if(checkMarker === null) {
                var alarm = document.getElementById("alarm-"+room);
                if(alarm !== null) {
                    //Get the alarm location
                
                    var alarmLocation = alarm.coords.split(",")
                    var x = alarmLocation[0];
                    var y = alarmLocation[1];
                    var height = alarmLocation[2];
                    var width =  alarmLocation[3];
            
                    // create marker for the flashing icon
                    var marker = document.createElement("div");
                     marker.id = "alarm-Marker" + room;
                    marker.className = "alarm active";
                    // Set the top location of the marker
                    marker.style.top = (y) + "px";
                    // Set the left position of the marker
                    marker.style.left = (x) + "px";
                    // Set the marker width and height
                    marker.style.height = (height) + "px";
                    marker.style.width = (width) + "px";
            
                    // set up class properties
                    alarm.marker = alarm.marker || marker
                    if(!alarm.marker.parentNode) {
                        // push the sensor to the room container
                        document.getElementById("containerForRoom").appendChild(alarm.marker);
                    } 
                }
        }
    }

    function deactivateSensor(room) {
        // Just delete the sensor marker if it exists
        var sensorMarker = document.getElementById("sensor-Marker" + room);
        if(sensorMarker !== null) {
            sensorMarker.remove();
        }
    }

       function deactivateAlarms(room) {
        // Just delete the sensor marker if it exists
        var alarmMarker = document.getElementById("alarm-Marker" + room);
        if(alarmMarker !== null) {
            alarmMarker.remove();
        }
    }

    function activateOrDeactivateOrDeactivateSensors(area) {
        // Turns on the on color of a sensor if it is currently detecting a fire or chemical leak
        const coords = area.coords.split(',').map(Number);
        const [x, y, r] = coords;
        const overlay = document.createElement('div');
        overlay.className = 'overlay';
        overlay.style.width = (r * 2) + 'px';
        overlay.style.height = (r * 2) + 'px';
        overlay.style.left = (x - r) + 'px';
        overlay.style.top = (y - r) + 'px';
        area.overlay = area.overlay || overlay;
        area.overlay.classList.toggle('active');
        if (!area.overlay.parentNode) {
            document.getElementById('containerForRoom').appendChild(area.overlay);
        }
    }
    function activateOrDeactivateAlarm(area) {
        // draws alarm state over alarms 
    }
    function activateOrDeactivateSprinkler(area) {
        // draws sprinker state
    }
    function  activateOrDeactivateDirectionIndicators(area) {
        // draws direction indicators state
    }
    function addOrRemoveSensor(){
        //
    }
    function addOrRemoveAlarm() {
        //
    }
    function addOrRemoveSprinkler() {
        //
    }
    function addOrRemoveDirectionIndicator() {
        //
    }

</script>

<style>
    /*alarm css*/
        .alarm {
        position:absolute;
        height: 40px;
        width: 25px;
        opacity: 0;

        background-color: red;
        animation-name: alarmKeyFrame;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }
    .alarm.active {
        opacity: 0.5;
    }
    @@keyframes alarmKeyFrame {
        0% {
                height: 40px;
                width: 25px;
                background-color: red;
        }
        25% {
                height: 20px;
                width: 25px;
                background-color: blue;
        }
        50% {
                height: 0px;
                width: 25px;
                background-color: red;
        }
        75% {
                height: 20px;
                width: 25px;
                background-color: green;
        }
        100% {
                height: 40px;
                width: 25px;
                background-color: red;
        }
    }







    /*sensor css*/
    .sensor {
        position:absolute;
        height: 25px;
        width: 25px;
        opacity: 0;
        border-radius: 60%;
        background-color: red;
        animation-name: sensorKeyFrame;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }
    .sensor.active {
        opacity: 0.5;
    }
    @@keyframes sensorKeyFrame {
        0% {
                height: 25px;
                width: 25px;
                background-color: red;
        }
        25% {
                height: 20px;
                width: 20px;
                background-color: blue;
        }
        50% {
                height: 0px;
                width: 1px;
                background-color: red;
        }
        75% {
                height: 20px;
                width: 20px;
                background-color: green;
        }
        100% {
                height: 25px;
                width: 25px;
                background-color: red;
        }
    }

        .containerForRoom {
            position: relative;

        }
</style>

